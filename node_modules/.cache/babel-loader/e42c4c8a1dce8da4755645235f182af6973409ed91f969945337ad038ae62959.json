{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Web_tech\\\\Enigma_Web_Application\\\\enigma_application\\\\src\\\\SideBarComponent.js\";\nimport './SideBarComponent.css';\nimport React, { useState } from 'react';\nimport useCollapse from 'react-collapsed';\nimport Collapsible from 'react-collapsible';\n\n// function Collapsible() {\n//   const [ isExpanded, setExpanded ] = useState(false);\n//   const { getCollapseProps, getToggleProps } = useCollapse({ isExpanded });\n// function handleOnClick() {\n//       // Do more stuff with the click event!\n//       // Or, set isExpanded conditionally \n//       setExpanded(!isExpanded);\n//   }\n// return (\n//       <div className=\"collapsible\">\n//           <div className=\"header\" {...getToggleProps({onClick: handleOnClick})}>\n//               {isExpanded ? 'Collapse' : 'Expand'}\n//           </div>\n//           <div {...getCollapseProps()}>\n//               <div className=\"content\">\n//                   Now you can see the hidden content. <br/><br/>\n//                   Click again to hide...\n//               </div>\n//           </div>\n//       </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideBarComponent(prop) {\n  console.log(prop.cohortResult);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [prop.cohortResult.cohortName.value, /*#__PURE__*/_jsxDEV(Collapsible, {\n      trigger: \"Start here\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the collapsible content. It can be any element or React component you like.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"It can even be another Collapsible component. Check out the next section!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 11\n  }, this);\n}\n_c = SideBarComponent;\nexport default SideBarComponent;\nvar _c;\n$RefreshReg$(_c, \"SideBarComponent\");","map":{"version":3,"names":["React","useState","useCollapse","Collapsible","jsxDEV","_jsxDEV","SideBarComponent","prop","console","log","cohortResult","children","cohortName","value","trigger","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Web_tech/Enigma_Web_Application/enigma_application/src/SideBarComponent.js"],"sourcesContent":["\r\nimport './SideBarComponent.css';\r\nimport React, { useState } from 'react';\r\nimport useCollapse from 'react-collapsed';\r\nimport Collapsible from 'react-collapsible';\r\n\r\n\r\n// function Collapsible() {\r\n//   const [ isExpanded, setExpanded ] = useState(false);\r\n//   const { getCollapseProps, getToggleProps } = useCollapse({ isExpanded });\r\n// function handleOnClick() {\r\n//       // Do more stuff with the click event!\r\n//       // Or, set isExpanded conditionally \r\n//       setExpanded(!isExpanded);\r\n//   }\r\n// return (\r\n//       <div className=\"collapsible\">\r\n//           <div className=\"header\" {...getToggleProps({onClick: handleOnClick})}>\r\n//               {isExpanded ? 'Collapse' : 'Expand'}\r\n//           </div>\r\n//           <div {...getCollapseProps()}>\r\n//               <div className=\"content\">\r\n//                   Now you can see the hidden content. <br/><br/>\r\n//                   Click again to hide...\r\n//               </div>\r\n//           </div>\r\n//       </div>\r\n//   );\r\n// }\r\n\r\nfunction SideBarComponent(prop) {\r\n\r\n    console.log(prop.cohortResult)\r\n\r\n\r\n    return (\r\n          <div>\r\n            {prop.cohortResult.cohortName.value}\r\n            {/* <Collapsible/> */}\r\n            <Collapsible trigger=\"Start here\">\r\n      <p>\r\n        This is the collapsible content. It can be any element or React\r\n        component you like.\r\n      </p>\r\n      <p>\r\n        It can even be another Collapsible component. Check out the next\r\n        section!\r\n      </p>\r\n    </Collapsible>\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n  \r\nexport default SideBarComponent;"],"mappings":";AACA,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,WAAW,MAAM,mBAAmB;;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EAE5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,YAAY,CAAC;EAG9B,oBACML,OAAA;IAAAM,QAAA,GACGJ,IAAI,CAACG,YAAY,CAACE,UAAU,CAACC,KAAK,eAEnCR,OAAA,CAACF,WAAW;MAACW,OAAO,EAAC,YAAY;MAAAH,QAAA,gBACvCN,OAAA;QAAAM,QAAA,EAAG;MAGH;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJb,OAAA;QAAAM,QAAA,EAAG;MAGH;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAACC,EAAA,GArBIb,gBAAgB;AA0BzB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}