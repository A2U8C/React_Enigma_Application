{"ast":null,"code":"import { useState, useRef, useCallback, useEffect, createElement } from 'react';\nvar style = {\n  \"wrapper\": \"_1I_qj\",\n  \"is_type_revealTopFirst\": \"_2L9NA\",\n  \"is_type_revealBottomFirst\": \"_1HWL6\",\n  \"is_state_closed\": \"_1L6Gs\",\n  \"is_state_before-open-transition\": \"_3U8bo\",\n  \"is_state_closed-transition\": \"_3EVaT\",\n  \"is_state_open-transition\": \"_RKZOX\",\n  \"is_state_open\": \"_2mqKm\",\n  \"is_state_before-closed-transition\": \"_2jajZ\",\n  \"content\": \"_2jwZj\"\n};\nvar assertNever = function assertNever(_) {\n  throw new Error(JSON.stringify(_));\n};\nvar forceReflow = function forceReflow(element) {\n  if (!element) {\n    return;\n  }\n  element.getBoundingClientRect();\n};\nvar Collapsible = function Collapsible(_ref) {\n  var children = _ref.children,\n    open = _ref.open,\n    onTransitionEnd = _ref.onTransitionEnd,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'revealBottomFirst' : _ref$type;\n  var _useState = useState(open ? 'open' : 'closed'),\n    state = _useState[0],\n    setState = _useState[1];\n  var _useState2 = useState('auto'),\n    contentHeight = _useState2[0],\n    setContentHeight = _useState2[1];\n  var contentRef = useRef(null);\n  var updateContentHeight = useCallback(function () {\n    if (!contentRef.current) {\n      return;\n    }\n    var contentHeight = contentRef.current.getBoundingClientRect().height + \"px\";\n    setContentHeight(contentHeight);\n  }, []);\n  var handleTransitionEnd = useCallback(function (event) {\n    if (event.propertyName === 'visibility') {\n      var newState = open ? 'open' : 'closed';\n      setState(newState);\n      if (onTransitionEnd) {\n        onTransitionEnd(newState);\n      }\n    }\n  }, [open, onTransitionEnd]);\n  useEffect(function () {\n    if (state === 'closed') {\n      if (open) {\n        updateContentHeight();\n        setState('before-open-transition');\n      }\n    } else if (state === 'before-open-transition') {\n      if (open) {\n        forceReflow(contentRef.current);\n        setState('open-transition');\n      }\n    } else if (state === 'open-transition') {\n      if (!open) {\n        setState('closed');\n      }\n    } else if (state === 'open') {\n      if (!open) {\n        updateContentHeight();\n        setState('before-closed-transition');\n      }\n    } else if (state === 'before-closed-transition') {\n      if (!open) {\n        forceReflow(contentRef.current);\n        setState('closed-transition');\n      }\n    } else if (state === 'closed-transition') {\n      if (open) {\n        setState('open');\n      }\n    } else {\n      assertNever(state);\n    }\n  }, [open, state, updateContentHeight]);\n  return createElement(\"div\", {\n    className: style.wrapper + \" \" + style[\"is_state_\" + state] + \" \" + style[\"is_type_\" + type],\n    style: {\n      '--Collapsible-content-height': contentHeight\n    },\n    onTransitionEnd: handleTransitionEnd,\n    \"aria-hidden\": !open\n  }, createElement(\"div\", {\n    className: style.content,\n    ref: contentRef\n  }, children));\n};\nexport { Collapsible };","map":{"version":3,"names":["assertNever","_","Error","JSON","stringify","forceReflow","element","getBoundingClientRect","Collapsible","_ref","children","open","onTransitionEnd","type","_ref$type","_useState","useState","state","setState","_useState2","contentHeight","setContentHeight","contentRef","useRef","updateContentHeight","useCallback","current","height","handleTransitionEnd","event","propertyName","newState","useEffect","createElement","className","style","wrapper","content","ref"],"sources":["C:\\Users\\ankus\\OneDrive\\Desktop\\Web_tech\\Enigma_Web_Application\\node_modules\\collapsible-react-component\\src\\utils\\assertNever.ts","C:\\Users\\ankus\\OneDrive\\Desktop\\Web_tech\\Enigma_Web_Application\\node_modules\\collapsible-react-component\\src\\utils\\forceReflow.ts","C:\\Users\\ankus\\OneDrive\\Desktop\\Web_tech\\Enigma_Web_Application\\node_modules\\collapsible-react-component\\src\\index.tsx"],"sourcesContent":["export const assertNever = (_: never) => {\n\tthrow new Error(JSON.stringify(_))\n}\n","export const forceReflow = (element: HTMLElement | null) => {\n  if (!element) {\n    return\n  }\n  element.getBoundingClientRect()\n}\n","import * as React from 'react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport style from './styles.module.css'\nimport { assertNever } from './utils/assertNever'\nimport { forceReflow } from './utils/forceReflow'\n\nexport type CollapsibleProps = {\n  open: boolean\n  type?: 'revealTopFirst' | 'revealBottomFirst'\n  onTransitionEnd?: (\n    newState: Extract<CollapsibleState, 'open' | 'closed'>\n  ) => void\n  children?: React.ReactNode\n}\n\ntype CollapsibleState =\n  | 'closed'\n  | 'before-open-transition'\n  | 'open-transition'\n  | 'open'\n  | 'before-closed-transition'\n  | 'closed-transition'\n\nexport const Collapsible: React.FunctionComponent<CollapsibleProps> = ({\n  children,\n  open,\n  onTransitionEnd,\n  type = 'revealBottomFirst'\n}) => {\n  const [state, setState] = useState<CollapsibleState>(open ? 'open' : 'closed')\n  const [contentHeight, setContentHeight] = useState('auto')\n  const contentRef = useRef<HTMLDivElement>(null)\n\n  const updateContentHeight = useCallback(() => {\n    if (!contentRef.current) {\n      return\n    }\n    const contentHeight = `${\n      contentRef.current.getBoundingClientRect().height\n    }px`\n    setContentHeight(contentHeight)\n  }, [])\n\n  const handleTransitionEnd = useCallback(\n    (event: React.TransitionEvent) => {\n      if (event.propertyName === 'visibility') {\n        const newState = open ? 'open' : 'closed'\n        setState(newState)\n        if (onTransitionEnd) {\n          onTransitionEnd(newState)\n        }\n      }\n    },\n    [open, onTransitionEnd]\n  )\n\n  useEffect(() => {\n    if (state === 'closed') {\n      if (open) {\n        updateContentHeight()\n        setState('before-open-transition')\n      }\n    } else if (state === 'before-open-transition') {\n      if (open) {\n        forceReflow(contentRef.current)\n        setState('open-transition')\n      }\n    } else if (state === 'open-transition') {\n      if (!open) {\n        setState('closed')\n      }\n    } else if (state === 'open') {\n      if (!open) {\n        updateContentHeight()\n        setState('before-closed-transition')\n      }\n    } else if (state === 'before-closed-transition') {\n      if (!open) {\n        forceReflow(contentRef.current)\n        setState('closed-transition')\n      }\n    } else if (state === 'closed-transition') {\n      if (open) {\n        setState('open')\n      }\n    } else {\n      assertNever(state)\n    }\n  }, [open, state, updateContentHeight])\n\n  return (\n    <div\n      className={`${style.wrapper} ${style[`is_state_${state}`]} ${\n        style[`is_type_${type}`]\n      }`}\n      style={\n        {\n          '--Collapsible-content-height': contentHeight\n        } as React.CSSProperties // Custom properties not supported workaround\n      }\n      onTransitionEnd={handleTransitionEnd}\n      aria-hidden={!open}\n    >\n      <div className={style.content} ref={contentRef}>\n        {children}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}