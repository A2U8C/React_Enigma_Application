{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Web_tech\\\\Enigma_Web_Application\\\\enigma_application\\\\src\\\\SideBarComponent.js\";\nimport './SideBarComponent.css';\nimport React, { useState } from 'react';\nimport useCollapse from 'react-collapsed';\nimport Collapsible from 'react-collapsible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Collapsible2() {\n  //   const [ isExpanded, setExpanded ] = useState(false);\n  //   const { getCollapseProps, getToggleProps } = useCollapse({ isExpanded });\n  // function handleOnClick() {\n  //       // Do more stuff with the click event!\n  //       // Or, set isExpanded conditionally \n  //       setExpanded(!isExpanded);\n  //   }\n  // return (\n  //       <div className=\"collapsible\">\n  //           <div className=\"header\" {...getToggleProps({onClick: handleOnClick})}>\n  //               {isExpanded ? 'Collapse' : 'Expand'}\n  //           </div>\n  //           <div {...getCollapseProps()}>\n  //               <div className=\"content\">\n  //                   Now you can see the hidden content. <br/><br/>\n  //                   Click again to hide...\n  //               </div>\n  //           </div>\n  //       </div>\n  //   );\n  /*#__PURE__*/_jsxDEV(Collapsible, {\n    trigger: \"Start here\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the collapsible content. It can be any element or React component you like.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"It can even be another Collapsible component. Check out the next section!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n}\n_c = Collapsible2;\nfunction SideBarComponent(prop) {\n  console.log(prop.cohortResult);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [prop.cohortResult.cohortName.value, /*#__PURE__*/_jsxDEV(Collapsible2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n}\n_c2 = SideBarComponent;\nexport default SideBarComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Collapsible2\");\n$RefreshReg$(_c2, \"SideBarComponent\");","map":{"version":3,"names":["React","useState","useCollapse","Collapsible","jsxDEV","_jsxDEV","Collapsible2","trigger","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SideBarComponent","prop","console","log","cohortResult","cohortName","value","_c2","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Web_tech/Enigma_Web_Application/enigma_application/src/SideBarComponent.js"],"sourcesContent":["\r\nimport './SideBarComponent.css';\r\nimport React, { useState } from 'react';\r\nimport useCollapse from 'react-collapsed';\r\nimport Collapsible from 'react-collapsible';\r\n\r\n\r\nfunction Collapsible2() {\r\n//   const [ isExpanded, setExpanded ] = useState(false);\r\n//   const { getCollapseProps, getToggleProps } = useCollapse({ isExpanded });\r\n// function handleOnClick() {\r\n//       // Do more stuff with the click event!\r\n//       // Or, set isExpanded conditionally \r\n//       setExpanded(!isExpanded);\r\n//   }\r\n// return (\r\n//       <div className=\"collapsible\">\r\n//           <div className=\"header\" {...getToggleProps({onClick: handleOnClick})}>\r\n//               {isExpanded ? 'Collapse' : 'Expand'}\r\n//           </div>\r\n//           <div {...getCollapseProps()}>\r\n//               <div className=\"content\">\r\n//                   Now you can see the hidden content. <br/><br/>\r\n//                   Click again to hide...\r\n//               </div>\r\n//           </div>\r\n//       </div>\r\n//   );\r\n<Collapsible trigger=\"Start here\">\r\n      <p>\r\n        This is the collapsible content. It can be any element or React\r\n        component you like.\r\n      </p>\r\n      <p>\r\n        It can even be another Collapsible component. Check out the next\r\n        section!\r\n      </p>\r\n    </Collapsible>\r\n}\r\n\r\n\r\nfunction SideBarComponent(prop) {\r\n\r\n    console.log(prop.cohortResult)\r\n\r\n\r\n    return (\r\n          <div>\r\n            {prop.cohortResult.cohortName.value}\r\n            <Collapsible2/>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n  \r\nexport default SideBarComponent;"],"mappings":";AACA,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,YAAYA,CAAA,EAAG;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,aAAAD,OAAA,CAACF,WAAW;IAACI,OAAO,EAAC,YAAY;IAAAC,QAAA,gBAC3BH,OAAA;MAAAG,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJP,OAAA;MAAAG,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAClB;AAACC,EAAA,GA/BQP,YAAY;AAkCrB,SAASQ,gBAAgBA,CAACC,IAAI,EAAE;EAE5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,YAAY,CAAC;EAG9B,oBACMb,OAAA;IAAAG,QAAA,GACGO,IAAI,CAACG,YAAY,CAACC,UAAU,CAACC,KAAK,eACnCf,OAAA,CAACC,YAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEX;AAEZ;AAACS,GAAA,GAZIP,gBAAgB;AAiBzB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}